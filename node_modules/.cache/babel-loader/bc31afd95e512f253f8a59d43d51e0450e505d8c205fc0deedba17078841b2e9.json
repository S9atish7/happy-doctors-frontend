{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import Barcode from\"react-barcode\";import html2canvas from\"html2canvas\";import\"./GenerateCard.css\";import logo from\"../assets/logo.png\";import{auth,database,ref,set,get}from\"../firebase\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GenerateCard=()=>{const navigate=useNavigate();const location=useLocation();const frontRef=useRef(null);const backRef=useRef(null);const[isDownloading,setIsDownloading]=useState(false);const[cardData,setCardData]=useState({snfNo:\"N/A\",cardHolderName:\"Not Available\",mobile:\"Not Available\",address:\"Not Available\",familyDetails:[]});const[flipped,setFlipped]=useState(false);// Calculate dates\nconst issueDate=new Date();const expiryDate=new Date();expiryDate.setFullYear(expiryDate.getFullYear()+1);const saveCardToFirebase=data=>{const user=auth.currentUser;if(user){const userRef=ref(database,`users/${user.uid}/card`);set(userRef,data).then(()=>{console.log(\"✅ Card saved successfully to Firebase\");navigate(\"/profile\");}).catch(error=>{console.error(\"❌ Error saving card:\",error);});}else{console.warn(\"⚠️ No authenticated user found\");}};const formatDate=date=>date.toISOString().split(\"T\")[0];const generateBarcodeValue=data=>{const mobileDigits=data.mobile.slice(-4).padStart(4,'0');return`${data.snfNo}-${mobileDigits}`;};const fetchCardFromFirebase=async cardId=>{try{const snapshot=await get(ref(database,`healthCards/${cardId}`));if(snapshot.exists()){return snapshot.val();}return null;}catch(error){console.error(\"Error fetching card:\",error);return null;}};const downloadCard=async()=>{setIsDownloading(true);try{// Temporarily unflip the card if it's flipped\nconst wasFlipped=flipped;if(wasFlipped)setFlipped(false);// Wait for the DOM to update\nawait new Promise(resolve=>setTimeout(resolve,300));// Capture front side\nconst frontCanvas=await html2canvas(frontRef.current,{backgroundColor:null,scale:3,logging:false,useCORS:true,allowTaint:true});// Flip the card to show back side\nsetFlipped(true);await new Promise(resolve=>setTimeout(resolve,300));// Capture back side\nconst backCanvas=await html2canvas(backRef.current,{backgroundColor:null,scale:3,logging:false,useCORS:true,allowTaint:true});// Restore original state\nif(!wasFlipped)setFlipped(false);// Create a new canvas to combine both sides\nconst combinedCanvas=document.createElement('canvas');const padding=30;const maxWidth=Math.max(frontCanvas.width,backCanvas.width);combinedCanvas.width=maxWidth;combinedCanvas.height=frontCanvas.height+backCanvas.height+padding;const ctx=combinedCanvas.getContext('2d');// Draw white background\nctx.fillStyle='#ffffff';ctx.fillRect(0,0,combinedCanvas.width,combinedCanvas.height);// Draw front at top (centered)\nconst frontX=(maxWidth-frontCanvas.width)/2;ctx.drawImage(frontCanvas,frontX,0);// Draw back below front with spacing (centered)\nconst backX=(maxWidth-backCanvas.width)/2;ctx.drawImage(backCanvas,backX,frontCanvas.height+padding);// Convert to image and download\nconst image=combinedCanvas.toDataURL('image/png',1.0);const link=document.createElement('a');link.href=image;link.download=`HappyDoctorsCard_${cardData.cardHolderName.replace(/\\s+/g,'_')}.png`;document.body.appendChild(link);link.click();document.body.removeChild(link);}catch(error){console.error(\"Error downloading card:\",error);}finally{setIsDownloading(false);}};useEffect(()=>{const loadCardData=async()=>{var _location$state,_location$state2;let formData=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.formData)||JSON.parse(localStorage.getItem(\"healthCardFormData\"));if((_location$state2=location.state)!==null&&_location$state2!==void 0&&_location$state2.cardId&&!formData){const firebaseData=await fetchCardFromFirebase(location.state.cardId);if(firebaseData)formData=firebaseData;}if(formData){const completeCardData={...formData,issueDate:formatDate(issueDate),expiryDate:formatDate(expiryDate),barcode:generateBarcodeValue(formData)};setCardData(completeCardData);}};loadCardData();},[location.state]);if(!cardData){return/*#__PURE__*/_jsxs(\"div\",{className:\"card-wrapper\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error: No card data found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please go back and complete the form again.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"profile-btn\",onClick:()=>navigate(\"/profile\"),children:\"\\uD83D\\uDC64 Go to Profile\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"card-wrapper\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"\\uD83C\\uDF89 Happy Doctors Consultancy Card \\uD83C\\uDF89\"}),/*#__PURE__*/_jsxs(\"div\",{className:`card-container ${flipped?\"flip\":\"\"}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card front\",ref:frontRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Company Logo\",className:\"card-logo\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"HAPPY DOCTORS CONSULTANCY\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Card Holder:\"}),\" \",cardData.cardHolderName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Card No:\"}),\" \",cardData.snfNo]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Phone:\"}),\" \",cardData.mobile]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address:\"}),\" \",cardData.address]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Issued Date:\"}),\" \",cardData.issueDate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Valid Until:\"}),\" \",cardData.expiryDate]}),/*#__PURE__*/_jsx(\"div\",{className:\"barcode-container\",children:/*#__PURE__*/_jsx(Barcode,{value:cardData.barcode||generateBarcodeValue(cardData),format:\"CODE128\",width:1.5,height:50,displayValue:true})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card back\",ref:backRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Company Logo\",className:\"card-logo\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"FAMILY DETAILS\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"family-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Age\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Relation\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:cardData.familyDetails.map((member,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:member.name}),/*#__PURE__*/_jsx(\"td\",{children:member.age}),/*#__PURE__*/_jsx(\"td\",{children:member.relation})]},index))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Emergency Contact: \",cardData.mobile]}),/*#__PURE__*/_jsx(\"p\",{className:\"terms\",children:\"Terms & Conditions Apply\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:downloadCard,disabled:isDownloading,children:isDownloading?\"Downloading...\":\"⬇️ Download Card\"}),/*#__PURE__*/_jsx(\"button\",{className:\"flip-btn\",onClick:()=>setFlipped(!flipped),children:flipped?\"Show Front\":\"Show Back\"})]})]});};export default GenerateCard;","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","useLocation","Barcode","html2canvas","logo","auth","database","ref","set","get","jsx","_jsx","jsxs","_jsxs","GenerateCard","navigate","location","frontRef","backRef","isDownloading","setIsDownloading","cardData","setCardData","snfNo","cardHolderName","mobile","address","familyDetails","flipped","setFlipped","issueDate","Date","expiryDate","setFullYear","getFullYear","saveCardToFirebase","data","user","currentUser","userRef","uid","then","console","log","catch","error","warn","formatDate","date","toISOString","split","generateBarcodeValue","mobileDigits","slice","padStart","fetchCardFromFirebase","cardId","snapshot","exists","val","downloadCard","wasFlipped","Promise","resolve","setTimeout","frontCanvas","current","backgroundColor","scale","logging","useCORS","allowTaint","backCanvas","combinedCanvas","document","createElement","padding","maxWidth","Math","max","width","height","ctx","getContext","fillStyle","fillRect","frontX","drawImage","backX","image","toDataURL","link","href","download","replace","body","appendChild","click","removeChild","loadCardData","_location$state","_location$state2","formData","state","JSON","parse","localStorage","getItem","firebaseData","completeCardData","barcode","className","children","onClick","src","alt","value","format","displayValue","map","member","index","name","age","relation","disabled"],"sources":["C:/Users/pagad/Desktop/happy-doctors/frontend/src/components/GenerateCard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Barcode from \"react-barcode\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"./GenerateCard.css\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { auth, database, ref, set, get } from \"../firebase\";\r\n\r\nconst GenerateCard = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const frontRef = useRef(null);\r\n  const backRef = useRef(null);\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n\r\n  const [cardData, setCardData] = useState({\r\n    snfNo: \"N/A\",\r\n    cardHolderName: \"Not Available\",\r\n    mobile: \"Not Available\",\r\n    address: \"Not Available\",\r\n    familyDetails: []\r\n  });\r\n\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  // Calculate dates\r\n  const issueDate = new Date();\r\n  const expiryDate = new Date();\r\n  expiryDate.setFullYear(expiryDate.getFullYear() + 1);\r\n\r\n  const saveCardToFirebase = (data) => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      const userRef = ref(database, `users/${user.uid}/card`);\r\n      set(userRef, data)\r\n        .then(() => {\r\n          console.log(\"✅ Card saved successfully to Firebase\");\r\n          navigate(\"/profile\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"❌ Error saving card:\", error);\r\n        });\r\n    } else {\r\n      console.warn(\"⚠️ No authenticated user found\");\r\n    }\r\n  };\r\n\r\n  const formatDate = (date) => date.toISOString().split(\"T\")[0];\r\n\r\n  const generateBarcodeValue = (data) => {\r\n    const mobileDigits = data.mobile.slice(-4).padStart(4, '0');\r\n    return `${data.snfNo}-${mobileDigits}`;\r\n  };\r\n\r\n  const fetchCardFromFirebase = async (cardId) => {\r\n    try {\r\n      const snapshot = await get(ref(database, `healthCards/${cardId}`));\r\n      if (snapshot.exists()) {\r\n        return snapshot.val();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error fetching card:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const downloadCard = async () => {\r\n    setIsDownloading(true);\r\n    try {\r\n      // Temporarily unflip the card if it's flipped\r\n      const wasFlipped = flipped;\r\n      if (wasFlipped) setFlipped(false);\r\n      \r\n      // Wait for the DOM to update\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n      \r\n      // Capture front side\r\n      const frontCanvas = await html2canvas(frontRef.current, {\r\n        backgroundColor: null,\r\n        scale: 3,\r\n        logging: false,\r\n        useCORS: true,\r\n        allowTaint: true\r\n      });\r\n      \r\n      // Flip the card to show back side\r\n      setFlipped(true);\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n      \r\n      // Capture back side\r\n      const backCanvas = await html2canvas(backRef.current, {\r\n        backgroundColor: null,\r\n        scale: 3,\r\n        logging: false,\r\n        useCORS: true,\r\n        allowTaint: true\r\n      });\r\n      \r\n      // Restore original state\r\n      if (!wasFlipped) setFlipped(false);\r\n      \r\n      // Create a new canvas to combine both sides\r\n      const combinedCanvas = document.createElement('canvas');\r\n      const padding = 30;\r\n      const maxWidth = Math.max(frontCanvas.width, backCanvas.width);\r\n      combinedCanvas.width = maxWidth;\r\n      combinedCanvas.height = frontCanvas.height + backCanvas.height + padding;\r\n      \r\n      const ctx = combinedCanvas.getContext('2d');\r\n      \r\n      // Draw white background\r\n      ctx.fillStyle = '#ffffff';\r\n      ctx.fillRect(0, 0, combinedCanvas.width, combinedCanvas.height);\r\n      \r\n      // Draw front at top (centered)\r\n      const frontX = (maxWidth - frontCanvas.width) / 2;\r\n      ctx.drawImage(frontCanvas, frontX, 0);\r\n      \r\n      // Draw back below front with spacing (centered)\r\n      const backX = (maxWidth - backCanvas.width) / 2;\r\n      ctx.drawImage(backCanvas, backX, frontCanvas.height + padding);\r\n      \r\n      // Convert to image and download\r\n      const image = combinedCanvas.toDataURL('image/png', 1.0);\r\n      const link = document.createElement('a');\r\n      link.href = image;\r\n      link.download = `HappyDoctorsCard_${cardData.cardHolderName.replace(/\\s+/g, '_')}.png`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error downloading card:\", error);\r\n    } finally {\r\n      setIsDownloading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadCardData = async () => {\r\n      let formData = location.state?.formData ||\r\n        JSON.parse(localStorage.getItem(\"healthCardFormData\"));\r\n      \r\n      if (location.state?.cardId && !formData) {\r\n        const firebaseData = await fetchCardFromFirebase(location.state.cardId);\r\n        if (firebaseData) formData = firebaseData;\r\n      }\r\n      \r\n      if (formData) {\r\n        const completeCardData = {\r\n          ...formData,\r\n          issueDate: formatDate(issueDate),\r\n          expiryDate: formatDate(expiryDate),\r\n          barcode: generateBarcodeValue(formData)\r\n        };\r\n        setCardData(completeCardData);\r\n      }\r\n    };\r\n    \r\n    loadCardData();\r\n  }, [location.state]);\r\n\r\n  if (!cardData) {\r\n    return (\r\n      <div className=\"card-wrapper\">\r\n        <h2>Error: No card data found</h2>\r\n        <p>Please go back and complete the form again.</p>\r\n        <button className=\"profile-btn\" onClick={() => navigate(\"/profile\")}>\r\n          👤 Go to Profile\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card-wrapper\">\r\n      <h2 className=\"title\">🎉 Happy Doctors Consultancy Card 🎉</h2>\r\n\r\n      <div className={`card-container ${flipped ? \"flip\" : \"\"}`}>\r\n        {/* Front Side */}\r\n        <div className=\"card front\" ref={frontRef}>\r\n          <div className=\"card-header\">\r\n            <img src={logo} alt=\"Company Logo\" className=\"card-logo\" />\r\n            <h3>HAPPY DOCTORS CONSULTANCY</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <p><strong>Card Holder:</strong> {cardData.cardHolderName}</p>\r\n            <p><strong>Card No:</strong> {cardData.snfNo}</p>\r\n            <p><strong>Phone:</strong> {cardData.mobile}</p>\r\n            <p><strong>Address:</strong> {cardData.address}</p>\r\n            <p><strong>Issued Date:</strong> {cardData.issueDate}</p>\r\n            <p><strong>Valid Until:</strong> {cardData.expiryDate}</p>\r\n            \r\n            <div className=\"barcode-container\">\r\n              <Barcode\r\n                value={cardData.barcode || generateBarcodeValue(cardData)}\r\n                format=\"CODE128\"\r\n                width={1.5}\r\n                height={50}\r\n                displayValue={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Back Side */}\r\n        <div className=\"card back\" ref={backRef}>\r\n          <div className=\"card-header\">\r\n            <img src={logo} alt=\"Company Logo\" className=\"card-logo\" />\r\n            <h3>FAMILY DETAILS</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <table className=\"family-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Age</th>\r\n                  <th>Relation</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {cardData.familyDetails.map((member, index) => (\r\n                  <tr key={index}>\r\n                    <td>{member.name}</td>\r\n                    <td>{member.age}</td>\r\n                    <td>{member.relation}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <p>Emergency Contact: {cardData.mobile}</p>\r\n            <p className=\"terms\">Terms & Conditions Apply</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button-group\">\r\n        <button \r\n          className=\"download-btn\" \r\n          onClick={downloadCard}\r\n          disabled={isDownloading}\r\n        >\r\n          {isDownloading ? \"Downloading...\" : \"⬇️ Download Card\"}\r\n        </button>\r\n        <button className=\"flip-btn\" onClick={() => setFlipped(!flipped)}>\r\n          {flipped ? \"Show Front\" : \"Show Back\"}\r\n        </button>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}