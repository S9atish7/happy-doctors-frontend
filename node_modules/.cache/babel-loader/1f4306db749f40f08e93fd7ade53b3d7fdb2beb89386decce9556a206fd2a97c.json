{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pagad\\\\Desktop\\\\happy-doctors\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport qrCodeImage from \"../assets/qr.jpg\";\nimport \"./Payment.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { database, ref, get, set } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const [isVerifying, setIsVerifying] = useState(false); // Add loading state\n\n  const handleVerifyPayment = async () => {\n    if (!transactionId.trim()) {\n      setPaymentStatus(\"failed\");\n      alert(\"❌ Please enter a valid transaction ID.\");\n      return;\n    }\n    setIsVerifying(true); // Start loading\n    try {\n      var _location$state, _location$state2;\n      const transactionRef = ref(database, `transactions/${transactionId}`);\n      const snapshot = await get(transactionRef);\n      if (snapshot.exists()) {\n        setPaymentStatus(\"failed\");\n        alert(\"❌ Payment Failed: Transaction ID already used!\");\n        setIsVerifying(false);\n        return;\n      }\n\n      // Save transaction\n      await set(transactionRef, {\n        timestamp: new Date().toISOString(),\n        cardId: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.cardId,\n        amount: 500\n      });\n      setPaymentStatus(\"success\");\n      alert(\"✅ Payment Successful!\");\n      const formData = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.formData) || JSON.parse(localStorage.getItem(\"healthCardFormData\"));\n      navigate(\"/generate-card\", {\n        state: {\n          formData\n        }\n      });\n    } catch (error) {\n      console.error(\"Error verifying payment:\", error);\n      alert(\"❌ Error verifying payment.\");\n      setPaymentStatus(\"failed\");\n    } finally {\n      setIsVerifying(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan & Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan the QR code below to complete the payment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrCodeImage,\n      alt: \"UPI QR Code\",\n      className: \"qr-code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Transaction ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter UPI Transaction ID\",\n        value: transactionId,\n        onChange: e => setTransactionId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyPayment,\n        className: \"verify-button\",\n        disabled: isVerifying,\n        children: isVerifying ? \"Verifying...\" : \"Verify Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), paymentStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-msg\",\n      children: \"\\u2705 Payment Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), paymentStatus === \"failed\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: \"\\u274C Payment Failed! Duplicate or Invalid Transaction.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"KF7Oi5ZqOf8OEP1N6XZ6CcoFyl0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","qrCodeImage","useNavigate","useLocation","database","ref","get","set","jsxDEV","_jsxDEV","Payment","_s","navigate","location","transactionId","setTransactionId","paymentStatus","setPaymentStatus","isVerifying","setIsVerifying","handleVerifyPayment","trim","alert","_location$state","_location$state2","transactionRef","snapshot","exists","timestamp","Date","toISOString","cardId","state","amount","formData","JSON","parse","localStorage","getItem","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/pagad/Desktop/happy-doctors/src/components/Payment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport qrCodeImage from \"../assets/qr.jpg\";\r\nimport \"./Payment.css\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { database, ref, get, set } from \"../firebase\";\r\n\r\nconst Payment = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n  const [isVerifying, setIsVerifying] = useState(false); // Add loading state\r\n\r\n  const handleVerifyPayment = async () => {\r\n    if (!transactionId.trim()) {\r\n      setPaymentStatus(\"failed\");\r\n      alert(\"❌ Please enter a valid transaction ID.\");\r\n      return;\r\n    }\r\n\r\n    setIsVerifying(true); // Start loading\r\n    try {\r\n      const transactionRef = ref(database, `transactions/${transactionId}`);\r\n      const snapshot = await get(transactionRef);\r\n\r\n      if (snapshot.exists()) {\r\n        setPaymentStatus(\"failed\");\r\n        alert(\"❌ Payment Failed: Transaction ID already used!\");\r\n        setIsVerifying(false);\r\n        return;\r\n      }\r\n\r\n      // Save transaction\r\n      await set(transactionRef, {\r\n        timestamp: new Date().toISOString(),\r\n        cardId: location.state?.cardId,\r\n        amount: 500\r\n      });\r\n\r\n      setPaymentStatus(\"success\");\r\n      alert(\"✅ Payment Successful!\");\r\n\r\n      const formData =\r\n        location.state?.formData ||\r\n        JSON.parse(localStorage.getItem(\"healthCardFormData\"));\r\n\r\n      navigate(\"/generate-card\", { state: { formData } });\r\n    } catch (error) {\r\n      console.error(\"Error verifying payment:\", error);\r\n      alert(\"❌ Error verifying payment.\");\r\n      setPaymentStatus(\"failed\");\r\n    } finally {\r\n      setIsVerifying(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h2>Scan & Pay</h2>\r\n      <p>Scan the QR code below to complete the payment.</p>\r\n\r\n      <img src={qrCodeImage} alt=\"UPI QR Code\" className=\"qr-code\" />\r\n\r\n      <div className=\"input-section\">\r\n        <label>Enter Transaction ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter UPI Transaction ID\"\r\n          value={transactionId}\r\n          onChange={(e) => setTransactionId(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={handleVerifyPayment}\r\n          className=\"verify-button\"\r\n          disabled={isVerifying}\r\n        >\r\n          {isVerifying ? \"Verifying...\" : \"Verify Payment\"}\r\n        </button>\r\n      </div>\r\n\r\n      {paymentStatus === \"success\" && (\r\n        <p className=\"success-msg\">✅ Payment Successful!</p>\r\n      )}\r\n      {paymentStatus === \"failed\" && (\r\n        <p className=\"error-msg\">\r\n          ❌ Payment Failed! Duplicate or Invalid Transaction.\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}