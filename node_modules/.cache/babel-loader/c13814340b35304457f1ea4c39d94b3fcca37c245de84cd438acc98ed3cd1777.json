{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pagad\\\\Desktop\\\\happy-doctors\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport qrCodeImage from \"../assets/qr.jpg\"; // Your QR Code image\nimport \"./Payment.css\"; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const handleVerifyPayment = async () => {\n    if (!transactionId.trim()) {\n      alert(\"Please enter a valid transaction ID.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/verify-payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          transactionId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setPaymentStatus(\"success\");\n        alert(\"✅ Payment Successful!\");\n      } else {\n        setPaymentStatus(\"failed\");\n        alert(\"❌ Payment Failed: \" + data.message);\n      }\n    } catch (error) {\n      console.error(\"Error verifying payment:\", error);\n      alert(\"❌ Error verifying payment.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan & Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan the QR code below to complete the payment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrCodeImage,\n      alt: \"UPI QR Code\",\n      className: \"qr-code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Transaction ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter UPI Transaction ID\",\n        value: transactionId,\n        onChange: e => setTransactionId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyPayment,\n        className: \"verify-button\",\n        children: \"Verify Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), paymentStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-msg\",\n      children: \"\\u2705 Payment Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 39\n    }, this), paymentStatus === \"failed\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: \"\\u274C Payment Failed! Duplicate or Invalid Transaction.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"ZuZ1XwOdYfXxYH8X+TvER3diB20=\");\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","qrCodeImage","jsxDEV","_jsxDEV","Payment","_s","transactionId","setTransactionId","paymentStatus","setPaymentStatus","handleVerifyPayment","trim","alert","response","fetch","method","headers","body","JSON","stringify","data","json","success","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pagad/Desktop/happy-doctors/src/components/Payment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport qrCodeImage from \"../assets/qr.jpg\"; // Your QR Code image\r\nimport \"./Payment.css\"; // Import CSS\r\n\r\nconst Payment = () => {\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n\r\n  const handleVerifyPayment = async () => {\r\n    if (!transactionId.trim()) {\r\n      alert(\"Please enter a valid transaction ID.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/verify-payment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ transactionId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setPaymentStatus(\"success\");\r\n        alert(\"✅ Payment Successful!\");\r\n      } else {\r\n        setPaymentStatus(\"failed\");\r\n        alert(\"❌ Payment Failed: \" + data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error verifying payment:\", error);\r\n      alert(\"❌ Error verifying payment.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h2>Scan & Pay</h2>\r\n      <p>Scan the QR code below to complete the payment.</p>\r\n\r\n      <img src={qrCodeImage} alt=\"UPI QR Code\" className=\"qr-code\" />\r\n\r\n      <div className=\"input-section\">\r\n        <label>Enter Transaction ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter UPI Transaction ID\"\r\n          value={transactionId}\r\n          onChange={(e) => setTransactionId(e.target.value)}\r\n        />\r\n        <button onClick={handleVerifyPayment} className=\"verify-button\">\r\n          Verify Payment\r\n        </button>\r\n      </div>\r\n\r\n      {paymentStatus === \"success\" && <p className=\"success-msg\">✅ Payment Successful!</p>}\r\n      {paymentStatus === \"failed\" && <p className=\"error-msg\">❌ Payment Failed! Duplicate or Invalid Transaction.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,kBAAkB,CAAC,CAAC;AAC5C,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACJ,aAAa,CAACK,IAAI,CAAC,CAAC,EAAE;MACzBC,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb;QAAc,CAAC;MACxC,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBb,gBAAgB,CAAC,SAAS,CAAC;QAC3BG,KAAK,CAAC,uBAAuB,CAAC;MAChC,CAAC,MAAM;QACLH,gBAAgB,CAAC,QAAQ,CAAC;QAC1BG,KAAK,CAAC,oBAAoB,GAAGQ,IAAI,CAACG,OAAO,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDZ,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACET,OAAA;IAAKuB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCxB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB5B,OAAA;MAAAwB,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEtD5B,OAAA;MAAK6B,GAAG,EAAE/B,WAAY;MAACgC,GAAG,EAAC,aAAa;MAACP,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/D5B,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxB,OAAA;QAAAwB,QAAA,EAAO;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpC5B,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,0BAA0B;QACtCC,KAAK,EAAE9B,aAAc;QACrB+B,QAAQ,EAAGC,CAAC,IAAK/B,gBAAgB,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACF5B,OAAA;QAAQqC,OAAO,EAAE9B,mBAAoB;QAACgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELvB,aAAa,KAAK,SAAS,iBAAIL,OAAA;MAAGuB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACnFvB,aAAa,KAAK,QAAQ,iBAAIL,OAAA;MAAGuB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5G,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzDID,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}