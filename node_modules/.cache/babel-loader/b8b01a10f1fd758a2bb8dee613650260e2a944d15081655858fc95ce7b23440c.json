{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pagad\\\\Desktop\\\\happy-doctors\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport qrCodeImage from \"../assets/qr.jpg\"; // Your QR Code image\nimport \"./Payment.css\"; // Import CSS\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const handleVerifyPayment = async () => {\n    if (!transactionId.trim()) {\n      alert(\"Please enter a valid transaction ID.\");\n      return;\n    }\n    try {\n      var _location$state, _location$state2;\n      // Check if transaction exists in Firebase\n      const transactionRef = ref(database, `transactions/${transactionId}`);\n      const snapshot = await get(transactionRef);\n      if (snapshot.exists()) {\n        alert(\"❌ Payment Failed: Transaction ID already used!\");\n        return;\n      }\n\n      // Save the transaction\n      await set(ref(database, `transactions/${transactionId}`), {\n        timestamp: new Date().toISOString(),\n        cardId: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.cardId,\n        amount: 500 // Or your payment amount\n      });\n\n      // Payment successful\n      setPaymentStatus(\"success\");\n      alert(\"✅ Payment Successful!\");\n\n      // Navigate to generate card with form data\n      const formData = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.formData) || JSON.parse(localStorage.getItem(\"healthCardFormData\"));\n      navigate(\"/generate-card\", {\n        state: {\n          formData\n        }\n      });\n    } catch (error) {\n      console.error(\"Error verifying payment:\", error);\n      alert(\"❌ Error verifying payment.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan & Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan the QR code below to complete the payment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrCodeImage,\n      alt: \"UPI QR Code\",\n      className: \"qr-code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Transaction ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter UPI Transaction ID\",\n        value: transactionId,\n        onChange: e => setTransactionId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyPayment,\n        className: \"verify-button\",\n        children: \"Verify Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), paymentStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-msg\",\n      children: \"\\u2705 Payment Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 39\n    }, this), paymentStatus === \"failed\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: \"\\u274C Payment Failed! Duplicate or Invalid Transaction.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"tedjmCJN81eqlalT0+LwH4vIItM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","qrCodeImage","useNavigate","useLocation","jsxDEV","_jsxDEV","Payment","_s","navigate","location","transactionId","setTransactionId","paymentStatus","setPaymentStatus","handleVerifyPayment","trim","alert","_location$state","_location$state2","transactionRef","ref","database","snapshot","get","exists","set","timestamp","Date","toISOString","cardId","state","amount","formData","JSON","parse","localStorage","getItem","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pagad/Desktop/happy-doctors/src/components/Payment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport qrCodeImage from \"../assets/qr.jpg\"; // Your QR Code image\r\nimport \"./Payment.css\"; // Import CSS\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\n\r\nconst Payment = () => {\r\n  const navigate=useNavigate();\r\n  const location=useLocation();\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n\r\n\r\nconst handleVerifyPayment = async () => {\r\n  if (!transactionId.trim()) {\r\n    alert(\"Please enter a valid transaction ID.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Check if transaction exists in Firebase\r\n    const transactionRef = ref(database, `transactions/${transactionId}`);\r\n    const snapshot = await get(transactionRef);\r\n    \r\n    if (snapshot.exists()) {\r\n      alert(\"❌ Payment Failed: Transaction ID already used!\");\r\n      return;\r\n    }\r\n    \r\n    // Save the transaction\r\n    await set(ref(database, `transactions/${transactionId}`), {\r\n      timestamp: new Date().toISOString(),\r\n      cardId: location.state?.cardId,\r\n      amount: 500 // Or your payment amount\r\n    });\r\n    \r\n    // Payment successful\r\n    setPaymentStatus(\"success\");\r\n    alert(\"✅ Payment Successful!\");\r\n    \r\n    // Navigate to generate card with form data\r\n    const formData = location.state?.formData || \r\n      JSON.parse(localStorage.getItem(\"healthCardFormData\"));\r\n    \r\n    navigate(\"/generate-card\", { state: { formData } });\r\n  } catch (error) {\r\n    console.error(\"Error verifying payment:\", error);\r\n    alert(\"❌ Error verifying payment.\");\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h2>Scan & Pay</h2>\r\n      <p>Scan the QR code below to complete the payment.</p>\r\n\r\n      <img src={qrCodeImage} alt=\"UPI QR Code\" className=\"qr-code\" />\r\n\r\n      <div className=\"input-section\">\r\n        <label>Enter Transaction ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter UPI Transaction ID\"\r\n          value={transactionId}\r\n          onChange={(e) => setTransactionId(e.target.value)}\r\n        />\r\n        <button onClick={handleVerifyPayment} className=\"verify-button\">\r\n          Verify Payment\r\n        </button>\r\n      </div>\r\n\r\n      {paymentStatus === \"success\" && <p className=\"success-msg\">✅ Payment Successful!</p>}\r\n      {paymentStatus === \"failed\" && <p className=\"error-msg\">❌ Payment Failed! Duplicate or Invalid Transaction.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}