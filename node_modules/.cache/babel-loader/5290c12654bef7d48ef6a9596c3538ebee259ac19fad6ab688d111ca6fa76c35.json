{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pagad\\\\Desktop\\\\happy-doctors\\\\src\\\\OtpLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from \"./firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OtpLogin = () => {\n  _s();\n  const [phone, setPhone] = useState(\"\"); // Store phone number\n  const [otp, setOtp] = useState(\"\"); // Store OTP entered by the user\n  const [verificationId, setVerificationId] = useState(null); // Store verification ID\n\n  // Function to send OTP\n  const sendOtp = async () => {\n    try {\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\n        size: \"invisible\",\n        callback: () => sendOtp()\n      });\n\n      // Send OTP to the given phone number\n      const confirmation = await signInWithPhoneNumber(auth, phone, window.recaptchaVerifier);\n      setVerificationId(confirmation.verificationId);\n      alert(\"OTP sent successfully!\");\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n    }\n  };\n\n  // Function to verify OTP\n  const verifyOtp = async () => {\n    try {\n      const credential = window.firebase.auth.PhoneAuthProvider.credential(verificationId, otp);\n      await auth.signInWithCredential(credential);\n      alert(\"Login Successful!\");\n    } catch (error) {\n      console.error(\"Error verifying OTP:\", error);\n      alert(\"Invalid OTP. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-md mx-auto bg-white rounded-xl shadow-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"Login with OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Phone Number (+91XXXXXXXXXX)\",\n      value: phone,\n      onChange: e => setPhone(e.target.value),\n      className: \"w-full p-2 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendOtp,\n      className: \"w-full bg-blue-500 text-white p-2 rounded\",\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), verificationId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        className: \"w-full bg-green-500 text-white p-2 rounded\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpLogin, \"TK2kq3Q2HVSZu3/djNhCeuiiizI=\");\n_c = OtpLogin;\nexport default OtpLogin;\nvar _c;\n$RefreshReg$(_c, \"OtpLogin\");","map":{"version":3,"names":["React","useState","auth","RecaptchaVerifier","signInWithPhoneNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","OtpLogin","_s","phone","setPhone","otp","setOtp","verificationId","setVerificationId","sendOtp","window","recaptchaVerifier","size","callback","confirmation","alert","error","console","verifyOtp","credential","firebase","PhoneAuthProvider","signInWithCredential","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/pagad/Desktop/happy-doctors/src/OtpLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from \"./firebase\";\r\n\r\nconst OtpLogin = () => {\r\n  const [phone, setPhone] = useState(\"\");  // Store phone number\r\n  const [otp, setOtp] = useState(\"\");  // Store OTP entered by the user\r\n  const [verificationId, setVerificationId] = useState(null);  // Store verification ID\r\n\r\n  // Function to send OTP\r\n  const sendOtp = async () => {\r\n    try {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\r\n        size: \"invisible\",\r\n        callback: () => sendOtp(),\r\n      });\r\n\r\n      // Send OTP to the given phone number\r\n      const confirmation = await signInWithPhoneNumber(auth, phone, window.recaptchaVerifier);\r\n      setVerificationId(confirmation.verificationId);\r\n      alert(\"OTP sent successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error sending OTP:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to verify OTP\r\n  const verifyOtp = async () => {\r\n    try {\r\n      const credential = window.firebase.auth.PhoneAuthProvider.credential(verificationId, otp);\r\n      await auth.signInWithCredential(credential);\r\n      alert(\"Login Successful!\");\r\n    } catch (error) {\r\n      console.error(\"Error verifying OTP:\", error);\r\n      alert(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-md mx-auto bg-white rounded-xl shadow-md space-y-4\">\r\n      <h2 className=\"text-xl font-bold\">Login with OTP</h2>\r\n      \r\n      {/* Phone Input */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Phone Number (+91XXXXXXXXXX)\"\r\n        value={phone}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n        className=\"w-full p-2 border rounded\"\r\n      />\r\n      \r\n      {/* Button to Send OTP */}\r\n      <button onClick={sendOtp} className=\"w-full bg-blue-500 text-white p-2 rounded\">\r\n        Send OTP\r\n      </button>\r\n\r\n      <div id=\"recaptcha-container\"></div>\r\n\r\n      {/* OTP Input and Verification */}\r\n      {verificationId && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            className=\"w-full p-2 border rounded\"\r\n          />\r\n          <button onClick={verifyOtp} className=\"w-full bg-green-500 text-white p-2 rounded\">\r\n            Verify OTP\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}