{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pagad\\\\Desktop\\\\happy-doctors\\\\src\\\\components\\\\OtpLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from \"../firebase\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OtpLogin = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [confirmationResult, setConfirmationResult] = useState(null);\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const setupRecaptcha = () => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\n        size: \"invisible\"\n      });\n    }\n  };\n  const sendOtp = async () => {\n    setErrorMessage(\"\");\n    if (!phoneNumber.startsWith(\"+\")) {\n      setErrorMessage(\"Enter a valid phone number with country code (e.g., +91XXXXXXXXXX).\");\n      return;\n    }\n    setupRecaptcha();\n    try {\n      const confirmation = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\n      setConfirmationResult(confirmation);\n      setIsOtpSent(true);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const verifyOtp = async () => {\n    setErrorMessage(\"\");\n    if (!otp) {\n      setErrorMessage(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      await confirmationResult.confirm(otp);\n      alert(\"Login successful!\");\n    } catch (error) {\n      setErrorMessage(\"Invalid OTP. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login with OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !isOtpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter phone number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpLogin, \"0OG8uvwql6h/DTO/Aiohz41Zf18=\");\n_c = OtpLogin;\nexport default OtpLogin;\nvar _c;\n$RefreshReg$(_c, \"OtpLogin\");","map":{"version":3,"names":["React","useState","auth","RecaptchaVerifier","signInWithPhoneNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","OtpLogin","_s","phoneNumber","setPhoneNumber","otp","setOtp","confirmationResult","setConfirmationResult","isOtpSent","setIsOtpSent","errorMessage","setErrorMessage","setupRecaptcha","window","recaptchaVerifier","size","sendOtp","startsWith","confirmation","error","message","verifyOtp","confirm","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pagad/Desktop/happy-doctors/src/components/OtpLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { auth, RecaptchaVerifier, signInWithPhoneNumber } from \"../firebase\";\r\n\r\nconst OtpLogin = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n  const [isOtpSent, setIsOtpSent] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const setupRecaptcha = () => {\r\n    if (!window.recaptchaVerifier) {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, \"recaptcha-container\", {\r\n        size: \"invisible\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendOtp = async () => {\r\n    setErrorMessage(\"\");\r\n    \r\n    if (!phoneNumber.startsWith(\"+\")) {\r\n      setErrorMessage(\"Enter a valid phone number with country code (e.g., +91XXXXXXXXXX).\");\r\n      return;\r\n    }\r\n\r\n    setupRecaptcha();\r\n\r\n    try {\r\n      const confirmation = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);\r\n      setConfirmationResult(confirmation);\r\n      setIsOtpSent(true);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    setErrorMessage(\"\");\r\n\r\n    if (!otp) {\r\n      setErrorMessage(\"Please enter the OTP.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await confirmationResult.confirm(otp);\r\n      alert(\"Login successful!\");\r\n    } catch (error) {\r\n      setErrorMessage(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2>Login with OTP</h2>\r\n      <div id=\"recaptcha-container\"></div>\r\n\r\n      {!isOtpSent ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n          />\r\n          <button onClick={sendOtp}>Send OTP</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <button onClick={verifyOtp}>Verify OTP</button>\r\n        </>\r\n      )}\r\n\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}