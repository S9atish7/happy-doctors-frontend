{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pagad\\\\Desktop\\\\happy-doctors\\\\frontend\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport qrCodeImage from \"../assets/qr.jpg\";\nimport \"./Payment.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleVerifyPayment = async () => {\n    if (!transactionId.trim()) {\n      setErrorMessage(\"Please enter a valid transaction ID.\");\n      return;\n    }\n    setIsVerifying(true);\n    setErrorMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/verify-payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          transactionId,\n          amount: 1 // Set your actual amount here\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Payment verification failed\");\n      }\n      if (data.success) {\n        var _location$state;\n        setPaymentStatus(\"success\");\n        const formData = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.formData) || JSON.parse(localStorage.getItem(\"healthCardFormData\"));\n\n        // Store the transaction ID with the form data\n        const cardData = {\n          ...formData,\n          transactionId: data.transactionId\n        };\n        navigate(\"/generate-card\", {\n          state: {\n            formData: cardData\n          }\n        });\n      } else {\n        setPaymentStatus(\"failed\");\n        setErrorMessage(data.message || \"Payment verification failed\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setPaymentStatus(\"failed\");\n      setErrorMessage(error.message || \"Error verifying payment. Please try again.\");\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan & Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan the QR code below to complete the payment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrCodeImage,\n      alt: \"UPI QR Code\",\n      className: \"qr-code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Transaction ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter UPI Transaction ID\",\n        value: transactionId,\n        onChange: e => setTransactionId(e.target.value),\n        disabled: isVerifying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyPayment,\n        className: \"verify-button\",\n        disabled: isVerifying,\n        children: isVerifying ? \"Verifying...\" : \"Verify Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-msg\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 26\n      }, this), paymentStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-msg\",\n        children: \"\\u2705 Payment Successful! Redirecting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"Yy0faNNWN4jr4vZWa/8v6CT0EHo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","qrCodeImage","useNavigate","useLocation","jsxDEV","_jsxDEV","Payment","_s","navigate","location","transactionId","setTransactionId","paymentStatus","setPaymentStatus","isVerifying","setIsVerifying","errorMessage","setErrorMessage","handleVerifyPayment","trim","response","fetch","method","headers","body","JSON","stringify","amount","data","json","ok","Error","message","success","_location$state","formData","state","parse","localStorage","getItem","cardData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pagad/Desktop/happy-doctors/frontend/src/components/Payment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport qrCodeImage from \"../assets/qr.jpg\";\r\nimport \"./Payment.css\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst Payment = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [transactionId, setTransactionId] = useState(\"\");\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n  const [isVerifying, setIsVerifying] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleVerifyPayment = async () => {\r\n    if (!transactionId.trim()) {\r\n      setErrorMessage(\"Please enter a valid transaction ID.\");\r\n      return;\r\n    }\r\n\r\n    setIsVerifying(true);\r\n    setErrorMessage(\"\");\r\n    \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/verify-payment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          transactionId,\r\n          amount: 1 // Set your actual amount here\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Payment verification failed\");\r\n      }\r\n\r\n      if (data.success) {\r\n        setPaymentStatus(\"success\");\r\n        const formData = location.state?.formData || \r\n                 JSON.parse(localStorage.getItem(\"healthCardFormData\"));\r\n        \r\n        // Store the transaction ID with the form data\r\n        const cardData = {\r\n          ...formData,\r\n          transactionId: data.transactionId\r\n        };\r\n        \r\n        navigate(\"/generate-card\", { state: { formData: cardData } });\r\n      } else {\r\n        setPaymentStatus(\"failed\");\r\n        setErrorMessage(data.message || \"Payment verification failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setPaymentStatus(\"failed\");\r\n      setErrorMessage(error.message || \"Error verifying payment. Please try again.\");\r\n    } finally {\r\n      setIsVerifying(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h2>Scan & Pay</h2>\r\n      <p>Scan the QR code below to complete the payment.</p>\r\n\r\n      <img src={qrCodeImage} alt=\"UPI QR Code\" className=\"qr-code\" />\r\n\r\n      <div className=\"input-section\">\r\n        <label>Enter Transaction ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter UPI Transaction ID\"\r\n          value={transactionId}\r\n          onChange={(e) => setTransactionId(e.target.value)}\r\n          disabled={isVerifying}\r\n        />\r\n        \r\n        <button \r\n          onClick={handleVerifyPayment} \r\n          className=\"verify-button\"\r\n          disabled={isVerifying}\r\n        >\r\n          {isVerifying ? \"Verifying...\" : \"Verify Payment\"}\r\n        </button>\r\n        \r\n        {errorMessage && <p className=\"error-msg\">{errorMessage}</p>}\r\n        \r\n        {paymentStatus === \"success\" && (\r\n          <p className=\"success-msg\">âœ… Payment Successful! Redirecting...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}